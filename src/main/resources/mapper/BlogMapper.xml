<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cz.blogtwo.mapper.BlogMapper">



    <resultMap id="blog" type="com.cz.blogtwo.entity.Blog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="content" column="content"/>
        <result property="description" column="description"/>
        <result property="published" column="is_published"/>
        <result property="recommend" column="is_recommend"/>
        <result property="appreciation" column="is_appreciation"/>
        <result property="commentEnabled" column="is_comment_enabled"/>
        <result property="top" column="is_top"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="views" column="views"/>
        <result property="words" column="words"/>
        <result property="readTime" column="read_time"/>
        <result property="password" column="password"/>
        <association property="user" javaType="com.cz.blogtwo.entity.User">
            <id property="id" column="user_id"/>
            <result property="username" column="username"/>
            <result property="nickname" column="nickname"/>
            <result property="avatar" column="avatar"/>
            <result property="email" column="email"/>
            <result property="createTime" column="user_create_time"/>
            <result property="updateTime" column="user_update_time"/>
            <result property="role" column="role"/>
        </association>
        <association property="category" javaType="com.cz.blogtwo.entity.Category">
            <id property="id" column="category_id"/>
            <result property="name" column="category_name"/>
        </association>
        <collection property="tags" javaType="com.cz.blogtwo.entity.Tag">
            <id property="id" column="tag_id"/>
            <result property="name" column="tag_name"/>
            <result property="color" column="color"/>
        </collection>

    </resultMap>
    <insert id="saveBlog" parameterType="com.cz.blogtwo.model.dto.Blog" useGeneratedKeys="true" keyProperty="id">
        insert into
            blog (title, first_picture, content, description,
                  is_published, is_recommend, is_appreciation, is_comment_enabled,
                  is_top, create_time, update_time, views, words, read_time, category_id, user_id, password)
        values
               (#{title}, #{firstPicture}, #{content}, #{description}, #{published},
                #{recommend}, #{appreciation}, #{commentEnabled},
                #{top}, #{createTime}, #{updateTime}, #{views}, #{words}, #{readTime},
                #{category.id}, #{user.id}, #{password})

    </insert>
    <insert id="saveBlogTag">
        insert into blog_tag (blog_id, tag_id) values (#{blogId}, #{tagId})
    </insert>
    <update id="updateBlog" parameterType="com.cz.blogtwo.model.dto.Blog">
        update
            blog
        set title=#{title}, first_picture=#{firstPicture}, content=#{content}, description=#{description},
             is_recommend=#{recommend}, is_published=#{published}, is_appreciation=#{appreciation}, is_comment_enabled=#{commentEnabled},
             is_top=#{top}, create_time=#{createTime}, update_time=#{updateTime}, views=#{views},
             words=#{words}, read_time=#{readTime}, category_id=#{category.id}, password=#{password}
        where id=#{id}
    </update>
    <update id="updateBlogRecommendById">
        update blog set is_recommend=#{recommend} where id=#{id}
    </update>
    <update id="updateBlogVisibilityById">
        update
            blog
        set
            is_appreciation=#{blogVisibility.appreciation},
            is_recommend=#{blogVisibility.recommend},
            is_comment_enabled=#{blogVisibility.commentEnabled},
            is_top=#{blogVisibility.top},
            is_published=#{blogVisibility.published},
            password=#{blogVisibility.password}
        where
            id=#{id}
    </update>
    <update id="updateBlogTopById">
        update blog set is_top=#{top} where id=#{id}
    </update>



    <delete id="deleteBlogTagByBlogId" >
        delete from blog_tag where blog_id=#{id}
    </delete>
    <delete id="deleteBlogById" >
        delete from blog where id=#{id}
    </delete>
    <select id="getListByTitleAndCategoryId" resultMap="blog">
        <bind name="titlePattern" value="'%' + title + '%'"/>
        select b.id, b.title, b.first_picture, b.create_time, b.update_time, b.is_published, b.is_recommend, b.is_appreciation,
        b.is_comment_enabled, b.is_top, b.password,
        c.id as category_id, c.category_name
        from blog as b left join category as c on b.category_id=c.id
        <where>
            <if test="title!=null and title!=''">
                b.title like #{titlePattern}
            </if>
            <if test="categoryId!=null">
                and b.category_id=#{categoryId}
            </if>
        </where>
    </select>
    <select id="getBlogById" resultMap="blog">
        select
            b.id, b.title, b.first_picture, b.content, b.description, b.is_recommend, b.is_published, b.is_appreciation,
            b.is_comment_enabled, b.is_top, b.create_time, b.update_time, b.views, b.words, b.read_time, b.password,
            c.id as category_id, c.category_name,
            bt.tag_id as tag_id, t.tag_name as tag_name, t.color
        from
             (
              (
                  (blog as b left join category as c on b.category_id=c.id)
                      left join blog_tag as bt on b.id=bt.blog_id)
                      left join tag as t on bt.tag_id=t.id)
        where b.id=#{id}
    </select>
    <select id="getIdAndTitleList" resultType="com.cz.blogtwo.entity.Blog">
        select id,title from blog
    </select>

    <select id="countBlog" resultType="java.lang.Integer">
        select count(*) from blog
    </select>

    <resultMap id="categoryBlogCount" type="com.cz.blogtwo.model.vo.CategoryBlogCount">
        <id property="id" column="category_id"/>
        <result property="value" column="blog_count"/>
    </resultMap>

    <!--查询每个分类的博客数量-->
    <select id="getCategoryBlogCountList" resultMap="categoryBlogCount">
        select category_id, count(category_id) as blog_count from blog group by category_id
    </select>


    <resultMap id="newBlog" type="com.cz.blogtwo.model.vo.NewBlog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="password" column="password"/>
    </resultMap>
    <!--查询最新公开博客-->
    <select id="getNewBlogListByIsPublished" resultMap="newBlog">
        select id, title, password
        from blog
        where is_published=true
        order by create_time desc
    </select>


    <resultMap id="randomBlog" type="com.cz.blogtwo.model.vo.RandomBlog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="password" column="password"/>
        <result property="createTime" column="create_time"/>
        <result property="firstPicture" column="first_picture"/>
    </resultMap>
    <!--查询随机的公开且推荐文章-->
    <select id="getRandomBlogListByLimitNumAndIsPublishedAndIsRecommend" resultMap="randomBlog">
        select id, title, password, create_time, first_picture
        from blog
        where is_published=true and is_recommend=true
        order by rand() limit #{limitNum}
    </select>


    <resultMap id="blogInfo" type="com.cz.blogtwo.model.vo.BlogInfo">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="description" column="description"/>
        <result property="createTime" column="create_time"/>
        <result property="views" column="views"/>
        <result property="words" column="words"/>
        <result property="readTime" column="read_time"/>
        <result property="top" column="is_top"/>
        <result property="password" column="password"/>
        <association property="category" javaType="com.cz.blogtwo.entity.Category">
            <result property="name" column="category_name"/>
        </association>
    </resultMap>

    <!--查询公开博客的简要信息-->
    <select id="getBlogInfoListByIsPublished" resultMap="blogInfo">
        select b.id, b.title, b.description, b.is_top, b.create_time, b.views, b.words, b.read_time, b.password, c.category_name
        from blog as b left join category as c on b.category_id=c.id
        where b.is_published=true
    </select>


    <!--根据分类name查询公开博客List-->
    <select id="getBlogInfoListByCategoryNameAndIsPublished" resultMap="blogInfo">
        select b.id, b.title, b.description, b.is_top, b.create_time, b.views, b.words, b.read_time, b.password, c.category_name
        from category as c left join blog as b on b.category_id=c.id
        where c.category_name=#{categoryName} and b.is_published=true
    </select>


    <resultMap id="blogDetail" type="com.cz.blogtwo.model.vo.BlogDetail">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="appreciation" column="is_appreciation"/>
        <result property="commentEnabled" column="is_comment_enabled"/>
        <result property="top" column="is_top"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="views" column="views"/>
        <result property="words" column="words"/>
        <result property="readTime" column="read_time"/>
        <result property="password" column="password"/>
        <association property="category" javaType="com.cz.blogtwo.entity.Category">
            <result property="name" column="category_name"/>
        </association>
        <collection property="tags" javaType="com.cz.blogtwo.entity.Tag">
            <result property="name" column="tag_name"/>
            <result property="color" column="color"/>
        </collection>
    </resultMap>

    <!--按id查询公开博客-->
    <select id="getBlogByIdAndIsPublished" resultMap="blogDetail">
        select b.id, b.title, b.content, b.is_appreciation, b.is_comment_enabled, b.is_top,
               b.create_time, b.update_time, b.views, b.words, b.read_time, b.password,
               c.category_name,
               t.tag_name as tag_name, t.color
        from ((
            (blog as b left join category as c on b.category_id=c.id)
                left join blog_tag as bt on b.id=bt.blog_id)
                left join tag as t on bt.tag_id=t.id)
        where b.id=#{id} and b.is_published=true
    </select>

    <select id="getGroupYearMonthByIsPublished" resultType="java.lang.String">
        select date_format(create_time, "%Y年%m月")
        from blog
        where is_published=true
        group by date_format(create_time, "%Y年%m月")
        order by date_format(create_time, "%Y年%m月") desc
    </select>


    <resultMap id="archiveBlog" type="com.cz.blogtwo.model.vo.ArchiveBlog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="day" column="create_day"/>
        <result property="password" column="password"/>
    </resultMap>
    <select id="getArchiveBlogListByYearMonthAndIsPublished" resultMap="archiveBlog">
        select id, title, password, date_format(create_time, "%d日") as create_day
        from blog
        where date_format(create_time, "%Y年%m月")=#{yearMonth} and is_published=true
        order by create_time desc
    </select>

    <select id="countBlogByIsPublished" resultType="java.lang.Integer">
        select count(*) from blog where is_published= true
    </select>


    <resultMap id="searchBlog" type="com.cz.blogtwo.model.vo.SearchBlog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
    </resultMap>
    <!--按关键字根据文章内容搜索公开且无密码保护的博客文章-->
    <select id="getSearchBlogListByQueryAndIsPublished" resultMap="searchBlog">
        <bind name="queryPattern" value="'%' + query + '%'"/>
        select id, title, content
        from blog
        where is_published=true and password='' and content like #{queryPattern}
    </select>
</mapper>
